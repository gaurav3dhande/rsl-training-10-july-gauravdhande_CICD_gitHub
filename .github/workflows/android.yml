name: Android CI

# Workflow should be triggered on the mentioned GitHub events...
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Stage : Set of jobs like Build, Unit testing, Instrumetation testing, Deploy
jobs:
  # Build job.
  build:
    # Runs on “Ubuntu” OS environment
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: set up JDK 17
      #  Uses “setup-jave@v3” action to set up java.
      uses: actions/setup-java@v3
      # “with:” is used to provide values to parameters.
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
    
  # Job to run the unit tests  
  unit-test:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Run Linter and Test
      run: ./gradlew check
    - name: Upload Reports
      uses: actions/upload-artifact@v2
      with:
        name: Test-Reports
        path: app/build/reports
    
  # Job to run the Instrumentation tests
  ui-tests:
    needs: [build]
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v3
    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Run UI test
      uses: ReactiveCircus/android-emulator-runner@v2.28.0
      with:
        api-level: 29
        script: ./gradlew connectedDebugAndroidTest
    - name: Upload Reports
      uses: actions/upload-artifact@v2
      with:
        name: UI-Test-Reports
        path: app/build/reports 
        
  # Job to deploy the docker image.
  deploy:
    needs: [build, unit-test, ui-tests]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Bump release version
      id: bump_version
      uses: christian-draeger/increment-semantic-version@1.1.0
      with:
        current-version: '1.0.0' 
        version-fragment: 'bug'
    - name: Do something with your bumped release version
      run: echo ${{ steps.bump_version.outputs.next-version }}
    - name: Docker Build & Push Action
      uses: mr-smithers-excellent/docker-build-push@v6.2
      with:
        image: gauravdhande/sum-app-final-ultimate
        tags: version-${{ steps.bump_version.outputs.next-version }}
        registry: docker.io
        username: ${{ secrets.DOCKER_USER_NAME}}
        password: ${{ secrets.DOCKER_PASSWORD }}
